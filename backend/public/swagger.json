{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Status": {
				"enum": [
					0,
					1,
					2,
					3
				],
				"type": "number"
			},
			"AuthResponse": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/Status"
					},
					"token": {
						"type": "string"
					},
					"expiresIn": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"status",
					"token",
					"expiresIn"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthUserInput": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Role": {
				"enum": [
					0,
					1,
					2
				],
				"type": "number"
			},
			"OnlineStatus": {
				"enum": [
					0,
					1
				],
				"type": "number"
			},
			"User": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"status": {
						"$ref": "#/components/schemas/Status"
					},
					"onlineStatus": {
						"$ref": "#/components/schemas/OnlineStatus"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array"
					},
					"rooms": {
						"items": {
							"$ref": "#/components/schemas/Room"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"username",
					"password",
					"role",
					"status",
					"onlineStatus",
					"messages",
					"rooms"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Message": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"content": {
						"type": "string"
					},
					"time": {
						"type": "string"
					},
					"room": {
						"$ref": "#/components/schemas/Room"
					}
				},
				"required": [
					"id",
					"user",
					"content",
					"time",
					"room"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Room": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array"
					},
					"users": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"messages",
					"users"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LogoutInput": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateUserInput": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"status": {
						"$ref": "#/components/schemas/Status"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostMessageInput": {
				"properties": {
					"userId": {
						"type": "number",
						"format": "double"
					},
					"content": {
						"type": "string"
					},
					"roomName": {
						"type": "string"
					}
				},
				"required": [
					"userId",
					"content",
					"roomName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JoinRoomInput": {
				"properties": {
					"name": {
						"type": "string"
					},
					"userId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"userId"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "s23-ESN-SB1",
		"version": "0.0.1",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "SB1"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/auth/register": {
			"post": {
				"operationId": "RegisterUser",
				"responses": {
					"200": {
						"description": "AuthResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					}
				},
				"description": "Registers user based on provided username and password",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthUserInput"
							}
						}
					}
				}
			}
		},
		"/api/auth/login": {
			"post": {
				"operationId": "LoginUser",
				"responses": {
					"200": {
						"description": "AuthResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					}
				},
				"description": "login user based on provided username and password",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthUserInput"
							}
						}
					}
				}
			}
		},
		"/api/auth/logout": {
			"post": {
				"operationId": "LogoutUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LogoutInput"
							}
						}
					}
				}
			}
		},
		"/api/users/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "user entity",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Get a user based on userId provided",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "true",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"description": "Delete an user from the system",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "user entity",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get a user based on userId provided",
				"security": [],
				"parameters": []
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "user entity",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Update the states of an user based on state provieded",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserInput"
							}
						}
					}
				}
			}
		},
		"/api/messages/{roomName}": {
			"get": {
				"operationId": "GetMessages",
				"responses": {
					"200": {
						"description": "Message[]",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieve all messages in the database in the specified room",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "roomName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/messages": {
			"post": {
				"operationId": "PostMessage",
				"responses": {
					"200": {
						"description": "Message",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Message"
								}
							}
						}
					}
				},
				"description": "Post a new message to the target room",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostMessageInput"
							}
						}
					}
				}
			}
		},
		"/api/rooms": {
			"post": {
				"operationId": "JoinRoom",
				"responses": {
					"200": {
						"description": "Room",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						}
					}
				},
				"description": "Join a room, if not exist then create",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JoinRoomInput"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}