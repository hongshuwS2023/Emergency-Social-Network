{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"TokenResponse": {
				"properties": {
					"user_id": {
						"type": "string"
					},
					"user_name": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"expires_in": {
						"type": "string"
					}
				},
				"required": [
					"user_id",
					"user_name",
					"token",
					"expires_in"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthUserInput": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LogoutInput": {
				"properties": {
					"id": {
						"type": "string"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Role": {
				"enum": [
					0,
					1,
					2
				],
				"type": "number"
			},
			"Status": {
				"enum": [
					0,
					1,
					2,
					3
				],
				"type": "number"
			},
			"OnlineStatus": {
				"enum": [
					0,
					1
				],
				"type": "number"
			},
			"User": {
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"status": {
						"$ref": "#/components/schemas/Status"
					},
					"onlineStatus": {
						"$ref": "#/components/schemas/OnlineStatus"
					},
					"statusTimeStamp": {
						"type": "string"
					},
					"logoutTime": {
						"type": "string"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array"
					},
					"rooms": {
						"items": {
							"$ref": "#/components/schemas/Room"
						},
						"type": "array"
					},
					"historyStatus": {
						"items": {
							"$ref": "#/components/schemas/HistoryStatus"
						},
						"type": "array"
					},
					"accountStatus": {
						"$ref": "#/components/schemas/AccountStatus"
					},
					"activityVictims": {
						"items": {
							"$ref": "#/components/schemas/Activity"
						},
						"type": "array"
					},
					"activities": {
						"items": {
							"$ref": "#/components/schemas/Activity"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"username",
					"password",
					"role",
					"status",
					"onlineStatus",
					"statusTimeStamp",
					"logoutTime",
					"messages",
					"rooms",
					"historyStatus",
					"accountStatus",
					"activityVictims",
					"activities"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RoomType": {
				"enum": [
					0,
					1,
					2,
					3,
					4
				],
				"type": "number"
			},
			"Message": {
				"properties": {
					"id": {
						"type": "string"
					},
					"sender": {
						"$ref": "#/components/schemas/User"
					},
					"content": {
						"type": "string"
					},
					"time": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/Status"
					},
					"room": {
						"$ref": "#/components/schemas/Room"
					}
				},
				"required": [
					"id",
					"sender",
					"content",
					"time",
					"status",
					"room"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Room": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/RoomType"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array"
					},
					"users": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"type",
					"messages",
					"users"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HistoryStatus": {
				"properties": {
					"id": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/Status"
					},
					"timeStamp": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					}
				},
				"required": [
					"id",
					"status",
					"timeStamp",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AccountStatus": {
				"enum": [
					0,
					1
				],
				"type": "number"
			},
			"ActivityStatus": {
				"enum": [
					0,
					1,
					2
				],
				"type": "number"
			},
			"Activity": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"victim": {
						"$ref": "#/components/schemas/User"
					},
					"description": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/ActivityStatus"
					},
					"members": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"victim",
					"description",
					"status",
					"members"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateUserInput": {
				"properties": {
					"id": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"status": {
						"$ref": "#/components/schemas/Status"
					},
					"onlineStatus": {
						"$ref": "#/components/schemas/OnlineStatus"
					},
					"statusTimeStamp": {
						"type": "string"
					},
					"logoutTime": {
						"type": "string"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostMessageInput": {
				"properties": {
					"userId": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"roomId": {
						"type": "string"
					}
				},
				"required": [
					"userId",
					"content",
					"roomId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JoinRoomInput": {
				"properties": {
					"idList": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"idList"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateChatGroupInput": {
				"properties": {
					"roomId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/RoomType"
					}
				},
				"required": [
					"roomId",
					"userId",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateChatGroupInput": {
				"properties": {
					"userId": {
						"type": "string"
					},
					"isJoin": {
						"type": "boolean"
					}
				},
				"required": [
					"userId",
					"isJoin"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SearchResult": {
				"properties": {
					"users": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array"
					},
					"historyStatus": {
						"items": {
							"$ref": "#/components/schemas/HistoryStatus"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Context": {
				"enum": [
					0,
					1,
					2,
					3,
					4
				],
				"type": "number"
			},
			"UpdateActivityInput": {
				"properties": {
					"id": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/ActivityStatus"
					}
				},
				"required": [
					"id",
					"userId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateActivityInput": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"victimName": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"victimName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EmergencyWords": {
				"properties": {
					"id": {
						"type": "string"
					},
					"sender": {
						"type": "string"
					},
					"contact": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"time_created": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"timeout": {
						"type": "number",
						"format": "double"
					},
					"time_to_send": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"sender",
					"contact",
					"content",
					"time_created",
					"email",
					"timeout",
					"time_to_send"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetEmergencyWordsResponse": {
				"properties": {
					"availables": {
						"items": {
							"$ref": "#/components/schemas/EmergencyWords"
						},
						"type": "array"
					},
					"unsent": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EmergencyWords"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"availables",
					"unsent"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostEmergencyWordsInput": {
				"properties": {
					"user_id": {
						"type": "string"
					},
					"contact": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"timeout": {
						"type": "number",
						"format": "double"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"user_id",
					"contact",
					"email",
					"timeout",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateEmergencyWordsInput": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"contact": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"timeout": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"user_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AdminChangeInput": {
				"properties": {
					"id": {
						"type": "string"
					},
					"accountStatus": {
						"$ref": "#/components/schemas/AccountStatus"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "s23-ESN-SB1",
		"version": "0.0.1",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "SB1"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/auth/register": {
			"post": {
				"operationId": "RegisterUser",
				"responses": {
					"200": {
						"description": "TokenResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TokenResponse"
								}
							}
						}
					}
				},
				"description": "Registers user based on provided username and password",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthUserInput"
							}
						}
					}
				}
			}
		},
		"/api/auth/login": {
			"post": {
				"operationId": "LoginUser",
				"responses": {
					"200": {
						"description": "TokenResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TokenResponse"
								}
							}
						}
					}
				},
				"description": "login user based on provided username and password",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthUserInput"
							}
						}
					}
				}
			}
		},
		"/api/auth/logout": {
			"post": {
				"operationId": "LogoutUser",
				"responses": {
					"200": {
						"description": "TokenResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TokenResponse"
								}
							}
						}
					}
				},
				"description": "Logout the user",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LogoutInput"
							}
						}
					}
				}
			}
		},
		"/api/users/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "user entity",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Get a user based on userId provided, related rooms are retrieved with the user",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "true",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"description": "Delete an user from the system",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "user entity",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get a user based on userId provided",
				"security": [],
				"parameters": []
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "user entity",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Update the states of an user based on state provieded",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserInput"
							}
						}
					}
				}
			}
		},
		"/api/messages": {
			"post": {
				"operationId": "PostMessage",
				"responses": {
					"200": {
						"description": "Message",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Message"
								}
							}
						}
					}
				},
				"description": "Post a new message to the target room",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostMessageInput"
							}
						}
					}
				}
			}
		},
		"/api/rooms/{roomId}": {
			"get": {
				"operationId": "GetRoom",
				"responses": {
					"200": {
						"description": "Room",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						}
					}
				},
				"description": "Retrieve the room with all the related messages in the database",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "roomId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateGroupChat",
				"responses": {
					"200": {
						"description": "Room",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						}
					}
				},
				"description": "Join or leave a group chat room",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "roomId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateChatGroupInput"
							}
						}
					}
				}
			}
		},
		"/api/rooms": {
			"get": {
				"operationId": "GetChatGroup",
				"responses": {
					"200": {
						"description": "Rooms that are chatGroups",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Room"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieve all the chatGroups from the database",
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "JoinRoom",
				"responses": {
					"200": {
						"description": "Room",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						}
					}
				},
				"description": "Create and join a private chat room",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JoinRoomInput"
							}
						}
					}
				}
			}
		},
		"/api/rooms/chatgroup": {
			"post": {
				"operationId": "CreateGroupChat",
				"responses": {
					"200": {
						"description": "Room",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						}
					}
				},
				"description": "Create a group chat room",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateChatGroupInput"
							}
						}
					}
				}
			}
		},
		"/api/search": {
			"get": {
				"operationId": "Search",
				"responses": {
					"200": {
						"description": "searchResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SearchResult"
								}
							}
						}
					}
				},
				"description": "search the information based on passed in context and criteria",
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "criteria",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "context",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Context"
						}
					},
					{
						"in": "query",
						"name": "user_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "search_number",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "room_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/activities/{activityId}": {
			"get": {
				"operationId": "GetActivity",
				"responses": {
					"200": {
						"description": "activity entity",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Activity"
								}
							}
						}
					}
				},
				"description": "Get an activity based on activityId provided",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "activityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/activities": {
			"get": {
				"operationId": "GetActivities",
				"responses": {
					"200": {
						"description": "activity entity",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Activity"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all activities",
				"security": [],
				"parameters": []
			},
			"put": {
				"operationId": "UpdateActivity",
				"responses": {
					"200": {
						"description": "activity entity",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Activity"
								}
							}
						}
					}
				},
				"description": "Update the states of an activity based on the information provieded",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateActivityInput"
							}
						}
					}
				}
			},
			"post": {
				"operationId": "CreateActivity",
				"responses": {
					"200": {
						"description": "activity",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Activity"
								}
							}
						}
					}
				},
				"description": "Create an activity in the system",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateActivityInput"
							}
						}
					}
				}
			}
		},
		"/api/emergencywords": {
			"get": {
				"operationId": "GetEmergencyWords",
				"responses": {
					"200": {
						"description": "words",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetEmergencyWordsResponse"
								}
							}
						}
					}
				},
				"description": "Get all emergency messages",
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "userid",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "username",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostEmergencyWords",
				"responses": {
					"200": {
						"description": "words",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EmergencyWords"
								}
							}
						}
					}
				},
				"description": "Create a new emergency words",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostEmergencyWordsInput"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "UpdateEmergencyWords",
				"responses": {
					"200": {
						"description": "words",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EmergencyWords"
								}
							}
						}
					}
				},
				"description": "Update an emergency words",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateEmergencyWordsInput"
							}
						}
					}
				}
			}
		},
		"/api/emergencywords/{id}": {
			"delete": {
				"operationId": "DeleteEmergencyWords",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete an emergency words",
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/profiles/{userId}": {
			"get": {
				"operationId": "GetProfileByUserId",
				"responses": {
					"200": {
						"description": "User",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Get Profile by userId",
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/profiles": {
			"put": {
				"operationId": "UpdateUserProfile",
				"responses": {
					"200": {
						"description": "User",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Update user account status/role/username/password",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AdminChangeInput"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}